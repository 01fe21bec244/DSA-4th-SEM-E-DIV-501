#include <stdio.h>

void merge(int array[], int left, int middle, int right)
{
    int i, j, k;
    int n1 = middle - left + 1;
    int n2 = right - middle;
    int LeftArray[n1], RightArray[n2];
    for (i = 0; i < n1; i++)
        LeftArray[i] = array[left + i];
    for (j = 0; j < n2; j++)
        RightArray[j] = array[middle + 1 + j];
    i = 0;    // Initial index of first subarray
    j = 0;    // Initial index of second subarray
    k = left; // Initial index of merged subarray
    while (i < n1 && j < n2)
    {
        if (LeftArray[i] <= RightArray[j])
        {
            array[k] = LeftArray[i];
            i++;
        }
        else 
        {
            array[k] = RightArray[j];
            j++;
        }
        k++;
    }

    // Copy the remaining elements of LeftArray[], if there are any
    while (i < n1) {
        array[k] = LeftArray[i];
        i++;
        k++;
    }
    while (j < n2)
    {
        array[k] = RightArray[j];
        j++;
        k++;
    }
}

void mergeSort(int array[], int left, int right) 
{
    if (left < right) 
    {
        int middle = left + (right - left) / 2;
        mergeSort(array, left, middle);
        mergeSort(array, middle + 1, right);
        merge(array, left, middle, right);
    }
}

void printArray(int array[], int size)
{
    int i;
    for (i = 0; i < size; i++)
    {
        printf("%d ", array[i]);
    }
    printf("\n");
}

int main()
{
    int array[] = {24,74,76,45,78,6464,354};
    int size = sizeof(array) / sizeof(array[0]);
    printf("Original array: ");
    printArray(array, size);
    mergeSort(array, 0, size - 1);
    printf("Sorted array: ");
    printArray(array, size);
    return 0;
}
